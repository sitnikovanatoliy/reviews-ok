// app.js ‚îÄ —Ç–æ—á–∫–∞ –≤—Ö–æ–¥–∞ —Å–µ—Ä–≤–∏—Å–∞ Reviews‚ÄëOK
const path = require('path');
require('dotenv').config({ path: path.resolve(__dirname, '.env') });

/*--------------------------- DEBUG -----------------------------------------*/
console.log('> ENV:', {
  GOOGLE_CLIENT_ID:  process.env.GOOGLE_CLIENT_ID,
  SESSION_SECRET:   !!process.env.SESSION_SECRET,
  REDIS_URL:        process.env.REDIS_URL,
  NODE_ENV:         process.env.NODE_ENV
});
/*---------------------------------------------------------------------------*/

const express  = require('express');
const session  = require('express-session');
const passport = require('./src/auth');

const { createClient } = require('redis');
const RedisStore       = require('connect-redis')(session);

// ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ Redis ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ
const redisClient = createClient({
  url       : process.env.REDIS_URL,     // redis://user:pass@host:port
  legacyMode: true,                      // –Ω—É–∂–µ–Ω connect‚Äëredis@5
  socket    : { family: 4 }              // –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ IPv4
});

redisClient.on('error', err => console.error('‚ùå Redis error:', err));

// ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ Express ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ
const app  = express();
const PORT = process.env.PORT || 3000;

app.set('trust proxy', 1);
app.use(express.json());
app.use(express.urlencoded({ extended: true }));

// –ø–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ Redis, –∞ –ø–æ—Ç–æ–º –∑–∞–ø—É—Å–∫–∞–µ–º –≤—Å—é –æ—Å—Ç–∞–ª—å–Ω—É—é –ª–æ–≥–∏–∫—É
redisClient.connect().then(() => {
  console.log('‚úÖ Redis connected');

  // —Å–µ—Å—Å–∏–∏ —á–µ—Ä–µ–∑ Redis
  app.use(session({
    store            : new RedisStore({ client: redisClient }),
    secret           : process.env.SESSION_SECRET,
    resave           : false,
    saveUninitialized: false,
    cookie: {
      secure  : process.env.NODE_ENV === 'production',
      sameSite: 'none',
      maxAge  : 24 * 60 * 60 * 1000   // 1 —Å—É—Ç–∫–∏
    }
  }));

  app.use(passport.initialize());
  app.use(passport.session());

  /* ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ –†–æ—É—Ç—ã ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ */
  app.get('/', (_, res) => res.send('Reviews‚ÄëOK —Å–µ—Ä–≤–∏—Å –∑–∞–ø—É—â–µ–Ω!'));

  app.get('/auth/google',
    passport.authenticate('google', { scope: ['profile', 'email'] })
  );

  app.get('/auth/google/callback',
    passport.authenticate('google', { failureRedirect: '/' }),
    (_, res) => res.redirect('/dashboard')
  );

  app.get('/dashboard', (req, res) => {
    if (!req.isAuthenticated()) return res.redirect('/auth/google');
    res.send(`–ü—Ä–∏–≤–µ—Ç, ${req.user.displayName}!`);
  });
  /* ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ */

  app.listen(PORT, () =>
    console.log(`üöÄ –°–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω –Ω–∞ –ø–æ—Ä—Ç—É ${PORT}`));
}).catch(err => {
  console.error('‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ Redis:', err);
  process.exit(1);                      // –ø—É—Å—Ç—å PM2 –ø–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç —Å–µ—Ä–≤–∏—Å
});
